{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Tasks"],"specifiers":[{"kind":"local","local":"Tasks","exported":"Tasks"}]}}},"options":{"filename":"/imports/api/tasks.js","filenameRelative":"/imports/api/tasks.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/tasks.js.map","sourceFileName":"/imports/api/tasks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"tasks"},"ignored":false,"code":"module.export({Tasks:function(){return Tasks}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n\n\n\nvar Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  Meteor.publish('tasks', function () {\n    function publishTasks() {\n      return Tasks.find();\n    }\n\n    return publishTasks;\n  }());\n}\n\n// Start meteor methods - like controllers\nMeteor.methods({\n  'tasks.insert': function () {\n    function tasksInsert(text) {\n      check(text, String);\n\n      if (!this.userId) {\n        throw new Meteor.Error(\"not-authorized\");\n      }\n\n      Tasks.insert({\n        text: text,\n        createdAt: new Date(),\n        owner: this.userId,\n        username: Meteor.users.findOne(this.userId).username\n      });\n    }\n\n    return tasksInsert;\n  }(),\n  'tasks.remove': function () {\n    function tasksRemove(taskId) {\n      check(taskId, String);\n      Tasks.remove(taskId);\n    }\n\n    return tasksRemove;\n  }(),\n  'tasks.setChecked': function () {\n    function tasksSetChecked(taskId, setChecked) {\n      check(taskId, String);\n      check(setChecked, Boolean);\n\n      Tasks.update(taskId, { $set: { checked: setChecked } });\n    }\n\n    return tasksSetChecked;\n  }(),\n  'tasks.edit': function () {\n    function tasksEdit(taskId, newText) {\n      check(taskId, String);\n\n      Tasks.update(taskId, { $set: { text: newText } });\n    }\n\n    return tasksEdit;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/imports/api/tasks.js"],"names":["Meteor","Mongo","check","Tasks","Collection","isServer","publish","publishTasks","find","methods","text","String","userId","Error","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","newText"],"mappings":"AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAMC,QAAQ,IAAIF,MAAMG,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAGJ,OAAOK,QAAV,EAAmB;AACjBL,SAAOM,OAAP,CAAe,OAAf;AAAwB,aAASC,YAAT,GAAuB;AAC7C,aAAOJ,MAAMK,IAAN,EAAP;AACD;;AAFD,WAAiCD,YAAjC;AAAA;AAGD;;AAGD;AACAP,OAAOS,OAAP,CAAe;AACb,gBADa;AAAA,yBACEC,IADF,EACO;AAClBR,YAAMQ,IAAN,EAAYC,MAAZ;;AAEA,UAAG,CAAE,KAAKC,MAAV,EAAiB;AACf,cAAM,IAAIZ,OAAOa,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDV,YAAMW,MAAN,CAAa;AACXJ,kBADW;AAEXK,mBAAW,IAAIC,IAAJ,EAFA;AAGXC,eAAO,KAAKL,MAHD;AAIXM,kBAAUlB,OAAOmB,KAAP,CAAaC,OAAb,CAAqB,KAAKR,MAA1B,EAAkCM;AAJjC,OAAb;AAMD;;AAdY;AAAA;AAgBb,gBAhBa;AAAA,yBAgBGG,MAhBH,EAgBW;AACtBnB,YAAMmB,MAAN,EAAaV,MAAb;AACAR,YAAMmB,MAAN,CAAaD,MAAb;AAED;;AApBY;AAAA;AAsBb,oBAtBa;AAAA,6BAsBQA,MAtBR,EAsBgBE,UAtBhB,EAsB4B;AACvCrB,YAAMmB,MAAN,EAAcV,MAAd;AACAT,YAAMqB,UAAN,EAAiBC,OAAjB;;AAEArB,YAAMsB,MAAN,CAAaJ,MAAb,EAAqB,EAAEK,MAAO,EAACC,SAASJ,UAAV,EAAT,EAArB;AACD;;AA3BY;AAAA;AA6Bb,cA7Ba;AAAA,uBA6BAF,MA7BA,EA6BOO,OA7BP,EA6Be;AAC1B1B,YAAMmB,MAAN,EAAaV,MAAb;;AAEAR,YAAMsB,MAAN,CAAcJ,MAAd,EAAsB,EAACK,MAAM,EAAEhB,MAAMkB,OAAR,EAAP,EAAtB;AACD;;AAjCY;AAAA;AAAA,CAAf","file":"/imports/api/tasks.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif(Meteor.isServer){\r\n  Meteor.publish('tasks', function publishTasks(){\r\n    return Tasks.find();\r\n  });\r\n}\r\n\r\n\r\n// Start meteor methods - like controllers\r\nMeteor.methods({\r\n  'tasks.insert'(text){\r\n    check(text, String);\r\n\r\n    if(! this.userId){\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n\r\n  'tasks.remove' (taskId) {\r\n    check(taskId,String);\r\n    Tasks.remove(taskId);\r\n\r\n  },\r\n\r\n  'tasks.setChecked' ( taskId, setChecked ){\r\n    check(taskId, String);\r\n    check(setChecked,Boolean);\r\n\r\n    Tasks.update(taskId, { $set : {checked: setChecked } } );\r\n  },\r\n\r\n  'tasks.edit'(taskId,newText){\r\n    check(taskId,String);\r\n\r\n    Tasks.update( taskId, {$set: { text: newText } } );\r\n  },\r\n\r\n});\r\n"]},"hash":"e12c64bc1a6ffa9190d32cbf90708549eea79b2b"}
