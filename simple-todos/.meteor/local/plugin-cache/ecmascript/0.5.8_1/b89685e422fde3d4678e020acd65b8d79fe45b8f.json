{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Tasks"],"specifiers":[{"kind":"local","local":"Tasks","exported":"Tasks"}]}}},"options":{"filename":"/imports/api/tasks.js","filenameRelative":"/imports/api/tasks.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/tasks.js.map","sourceFileName":"/imports/api/tasks.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"tasks"},"ignored":false,"code":"module.export({Tasks:function(){return Tasks}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n\n\n\nvar Tasks = new Mongo.Collection('tasks');\n\nif (Meteor.isServer) {\n  Meteor.publish('tasks', function publishTasks() {\n    return Tasks.find();\n  });\n}\n\n// Start meteor methods - like controllers\nMeteor.methods({\n  'tasks.insert': function tasksInsert(text) {\n    check(text, String);\n\n    if (!this.userId) {\n      throw new Meteor.Error(\"not-authorized\");\n    }\n\n    Tasks.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: this.userId,\n      username: Meteor.users.findOne(this.userId).username\n    });\n  },\n  'tasks.remove': function tasksRemove(taskId) {\n    check(taskId, String);\n    Tasks.remove(taskId);\n  },\n  'tasks.setChecked': function tasksSetChecked(taskId, setChecked) {\n    check(taskId, String);\n    check(setChecked, Boolean);\n\n    Tasks.update(taskId, { $set: { checked: setChecked } });\n  },\n  'tasks.edit': function tasksEdit(taskId, newText) {\n    check(taskId, String);\n\n    Tasks.update(taskId, { $set: { text: newText } });\n  }\n});","ast":null,"map":{"version":3,"sources":["/imports/api/tasks.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAG,OAAO,QAAV,EAAmB;AACjB,SAAO,OAAP,CAAe,OAAf,EAAwB,SAAS,YAAT,GAAuB;AAC7C,WAAO,MAAM,IAAN,EAAP;AACD,GAFD;AAGD;;;AAID,OAAO,OAAP,CAAe;AACb,gBADa,uBACE,IADF,EACO;AAClB,UAAM,IAAN,EAAY,MAAZ;;AAEA,QAAG,CAAE,KAAK,MAAV,EAAiB;AACf,YAAM,IAAI,OAAO,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAED,UAAM,MAAN,CAAa;AACX,gBADW;AAEX,iBAAW,IAAI,IAAJ,EAFA;AAGX,aAAO,KAAK,MAHD;AAIX,gBAAU,OAAO,KAAP,CAAa,OAAb,CAAqB,KAAK,MAA1B,EAAkC;AAJjC,KAAb;AAMD,GAdY;AAgBb,gBAhBa,uBAgBG,MAhBH,EAgBW;AACtB,UAAM,MAAN,EAAa,MAAb;AACA,UAAM,MAAN,CAAa,MAAb;AAED,GApBY;AAsBb,oBAtBa,2BAsBQ,MAtBR,EAsBgB,UAtBhB,EAsB4B;AACvC,UAAM,MAAN,EAAc,MAAd;AACA,UAAM,UAAN,EAAiB,OAAjB;;AAEA,UAAM,MAAN,CAAa,MAAb,EAAqB,EAAE,MAAO,EAAC,SAAS,UAAV,EAAT,EAArB;AACD,GA3BY;AA6Bb,cA7Ba,qBA6BA,MA7BA,EA6BO,OA7BP,EA6Be;AAC1B,UAAM,MAAN,EAAa,MAAb;;AAEA,UAAM,MAAN,CAAc,MAAd,EAAsB,EAAC,MAAM,EAAE,MAAM,OAAR,EAAP,EAAtB;AACD;AAjCY,CAAf","file":"/imports/api/tasks.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif(Meteor.isServer){\r\n  Meteor.publish('tasks', function publishTasks(){\r\n    return Tasks.find();\r\n  });\r\n}\r\n\r\n\r\n// Start meteor methods - like controllers\r\nMeteor.methods({\r\n  'tasks.insert'(text){\r\n    check(text, String);\r\n\r\n    if(! this.userId){\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n\r\n  'tasks.remove' (taskId) {\r\n    check(taskId,String);\r\n    Tasks.remove(taskId);\r\n\r\n  },\r\n\r\n  'tasks.setChecked' ( taskId, setChecked ){\r\n    check(taskId, String);\r\n    check(setChecked,Boolean);\r\n\r\n    Tasks.update(taskId, { $set : {checked: setChecked } } );\r\n  },\r\n\r\n  'tasks.edit'(taskId,newText){\r\n    check(taskId,String);\r\n\r\n    Tasks.update( taskId, {$set: { text: newText } } );\r\n  },\r\n\r\n});\r\n"]},"hash":"b89685e422fde3d4678e020acd65b8d79fe45b8f"}
