{"version":3,"sources":["meteor://ðŸ’»app/imports/api/tasks.js","meteor://ðŸ’»app/imports/startup/accounts-config.js","meteor://ðŸ’»app/imports/ui/AccountsUIWrapper.jsx","meteor://ðŸ’»app/imports/ui/App.jsx","meteor://ðŸ’»app/imports/ui/AppLayout.jsx","meteor://ðŸ’»app/imports/ui/MainLayout.jsx","meteor://ðŸ’»app/imports/ui/SignInButton.jsx","meteor://ðŸ’»app/imports/ui/SignInForm.jsx","meteor://ðŸ’»app/imports/ui/SignUpButton.jsx","meteor://ðŸ’»app/imports/ui/SignUpForm.jsx","meteor://ðŸ’»app/imports/ui/Task.jsx","meteor://ðŸ’»app/client/router.jsx","meteor://ðŸ’»app/client/main.js"],"names":["Meteor","Mongo","check","Tasks","Collection","isServer","publish","publishTasks","find","methods","text","userId","Error","String","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","newText","Accounts","ui","config","passwordSignupFields","React","Component","ReactDOM","Template","Blaze","AccountsUIWrapper","getEmail","user","console","log","emails","address","logout","FlowRouter","go","render","bind","PropTypes","createContainer","Task","App","props","state","hideCompleted","handleSubmit","event","preventDefault","findDOMNode","refs","textInput","value","trim","call","toggleHideCompleted","setState","renderTasks","filteredTasks","tasks","filter","task","map","_id","incompleteTaskCount","currentUser","propTypes","array","isRequired","number","object","subscribe","sort","fetch","$ne","count","ApolloClient","meteorClientConfig","ApolloProvider","client","AppLayout","content","SignInButton","MainLayout","document","title","handleClick","SignUpButton","SignInForm","email","pwd","password","loginWithPassword","err","reason","onCancel","e","SignUpForm","userObject","createUser","editable","taskItem","taskClassName","toggleEdit","deleteTask","toggleChecked","makeTaskeditable","handleChange","editTask","target","$","val","res","component","mount","route","name","action","onLogin","startup"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\n// This code block only gets run if this file is imported/ran on the server.\r\nif(Meteor.isServer){\r\n  Meteor.publish('tasks', function publishTasks(){\r\n    return Tasks.find();\r\n  });\r\n}\r\n\r\n\r\n// Start meteor methods - like controllers\r\nMeteor.methods({\r\n    /**\r\n     * Insert a task document into the Task collection\r\n     * @param text - The text of the new task\r\n     */\r\n      'tasks.insert'(text){\r\n\r\n        // Throw an error if the user is not logged in\r\n        if(! this.userId){\r\n          throw new Meteor.Error(\"not-authorized\");\r\n        }\r\n        // Validate that text is a string\r\n        check(text, String);\r\n        // Insert a new task\r\n        Tasks.insert({\r\n          text,\r\n          createdAt: new Date(),\r\n          owner: this.userId,\r\n          username: Meteor.users.findOne(this.userId).username,\r\n        });\r\n      },\r\n\r\n    /**\r\n     * Remove a task document from the Tasks collection\r\n     * @param taskId - the ID of the Task to remove\r\n     */\r\n      'tasks.remove' (taskId) {\r\n        check(taskId,String);\r\n        Tasks.remove(taskId);\r\n\r\n      },\r\n\r\n    /**\r\n     * Set the checked attribute of a task\r\n     * @param taskId - the ID of the Task\r\n     * @param setChecked - a boolean that represents completion\r\n     */\r\n    'tasks.setChecked' ( taskId, setChecked ){\r\n        check(taskId, String);\r\n        check(setChecked,Boolean);\r\n\r\n        // use the $set keyword(MongoDB keyword) because it allows the document\r\n        // to be updated with that new field and not have the entire document\r\n        // replaced with a document with a new field.\r\n        Tasks.update(taskId, { $set : {checked: setChecked } } );\r\n      },\r\n\r\n    /**\r\n     * Edit the text of an existing task\r\n     * @param taskId - The ID of the task\r\n     * @param newText - The updated text\r\n     */\r\n    'tasks.edit'(taskId,newText){\r\n        check(taskId,String);\r\n\r\n        Tasks.update( taskId, {$set: { text: newText } } );\r\n      },\r\n\r\n});\r\n","import { Accounts } from 'meteor/accounts-base';\r\n\r\n// useful if using the accounts-ui setup. Not used in this application\r\nAccounts.ui.config({\r\n  passwordSignupFields: 'USERNAME_ONLY',\r\n});\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Template } from 'meteor/templating';\r\nimport { Blaze } from 'meteor/blaze';\r\n\r\n/**\r\n * React Component for the AccountsUI display. Customized it for my own use\r\n */\r\n\r\nexport default class AccountsUIWrapper extends Component {\r\n    /**\r\n     * Retrieve the current user's email address.\r\n     * @returns {String} - The user's email address or not Logged in if the user isn't\r\n     *             logged in.\r\n     */\r\n    getEmail(){\r\n        if (Meteor.user()){\r\n            console.log(\"here\");\r\n            return Meteor.user().emails[0].address;\r\n        }\r\n        else{\r\n            return \"Not Logged in\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Logout method for the button. Route to the home route on success.\r\n     */\r\n    logout(){\r\n        Meteor.logout(function(){\r\n            FlowRouter.go('/');\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Renders the component\r\n     * @returns {JSX}\r\n     */\r\n    render() {\r\n        // render the email and the logout button\r\n        return (<div>\r\n                  <span ref=\"container\">{this.getEmail()}</span>\r\n                  <button className=\"logout-button\" onClick={this.logout.bind(this)}>Logout</button>\r\n                </div>);\r\n    }\r\n}\r\n","import React, { Component, PropTypes } from 'react';\r\nimport { createContainer } from 'meteor/react-meteor-data';\r\nimport ReactDOM from 'react-dom';\r\nimport { Tasks } from '../api/tasks.js';\r\n\r\nimport Task from './Task.jsx';\r\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\r\n\r\n/**\r\n * Represents the Component pertaining t\r\n */\r\nclass App extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      hideCompleted: false,\r\n    };\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    // Find the text field via the React ref\r\n    const text = ReactDOM.findDOMNode(this.refs.textInput).value.trim();\r\n\r\n    Meteor.call('tasks.insert',text);\r\n\r\n    // Clear form\r\n    ReactDOM.findDOMNode(this.refs.textInput).value = '';\r\n  }\r\n\r\n  toggleHideCompleted(){\r\n    this.setState({\r\n      hideCompleted: !this.state.hideCompleted,\r\n    });\r\n  }\r\n\r\n  renderTasks() {\r\n    let filteredTasks = this.props.tasks;\r\n    if( this.state.hideCompleted ){\r\n      filteredTasks = filteredTasks.filter( (task) => !task.checked );\r\n    }\r\n    return filteredTasks.map( (task) => (\r\n      <Task key={task._id} task={task} />\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header>\r\n          <h1>To Do List | You have {this.props.incompleteTaskCount} to do</h1>\r\n\r\n          <label className=\"hide-completed\">\r\n            <input\r\n              type=\"checkbox\"\r\n              readOnly\r\n              checked={this.state.hideCompleted}\r\n              onClick={this.toggleHideCompleted.bind(this)}/>\r\n              Hide Completed Tasks\r\n          </label>\r\n\r\n          <AccountsUIWrapper/>\r\n\r\n          { this.props.currentUser ?\r\n            <form className=\"new-task\" onSubmit={this.handleSubmit.bind(this)} >\r\n              <input\r\n                type=\"text\"\r\n                ref=\"textInput\"\r\n                placeholder=\"Type to add new tasks\"\r\n              />\r\n            </form> : ''\r\n          }\r\n        </header>\r\n        <ul>\r\n          {this.renderTasks()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n   tasks: PropTypes.array.isRequired,\r\n   incompleteTaskCount: PropTypes.number.isRequired,\r\n   currentUser: PropTypes.object,\r\n };\r\n\r\n export default createContainer(() => {\r\n   Meteor.subscribe('tasks');\r\n   return {\r\n     tasks: Tasks.find({}, { sort: { createdAt: -1 } }).fetch(),\r\n     incompleteTaskCount: Tasks.find({checked: {$ne: true} }).count(),\r\n     currentUser: Meteor.user(),\r\n   };\r\n }, App);\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { render } from 'react-dom';\r\nimport React, { Component } from 'react';\r\n\r\nimport ApolloClient from 'apollo-client';\r\nimport { meteorClientConfig } from 'meteor/apollo';\r\n\r\nimport { ApolloProvider } from 'react-apollo';\r\nconst client = new ApolloClient(meteorClientConfig());\r\n\r\n\r\nexport default class AppLayout extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        const {content} = this.props;\r\n        return (\r\n            <div>\r\n                <ApolloProvider client={client}>\r\n                    {content}\r\n                </ApolloProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nimport SignInButton from './SignInButton.jsx';\r\n\r\nexport default class MainLayout extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    console.log(\"constructor\");\r\n    document.title = \"Home\";\r\n  }\r\n\r\n  \r\n  render(){\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h1>This is the Home page</h1>\r\n\r\n        <br/>\r\n        <SignInButton/>\r\n      </div>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\n\r\n\r\nexport default class SignInButton extends Component{\r\n  handleClick(event){\r\n    event.preventDefault();\r\n    FlowRouter.go('/signIn');\r\n  }\r\n  render(){\r\n    return(\r\n      <button className=\"btn primary-button bump-left\" onClick={this.handleClick.bind(this)}>Sign In Here</button>\r\n      );\r\n    }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SignUpButton from './SignUpButton.jsx';\r\n\r\nexport default class SignInForm extends Component{\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    let email = ReactDOM.findDOMNode(this.refs.username).value.trim();\r\n    let pwd = ReactDOM.findDOMNode(this.refs.password).value.trim();\r\n\r\n    Meteor.loginWithPassword(email,pwd,function(err){\r\n      if(err){\r\n        console.log(err.reason);\r\n        return false;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onCancel(e){\r\n    e.preventDefault();\r\n    FlowRouter.go('home');\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div id=\"containerDiv\" className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"text-center\">\r\n              <h3>\r\n                Need to create and Account?\r\n              </h3>\r\n              </div>\r\n              <div className=\"col-md-6 col-md-offset-3\">\r\n                <form className=\"signInForm\" onSubmit={this.handleSubmit.bind(this)}>\r\n                  <div className=\"form-group \">\r\n                    <label htmlFor=\"email\">Email:</label>\r\n                    <input\r\n                      id=\"email\"\r\n                      className=\"input-sm col-md-offset-1\"\r\n                      type=\"email\"\r\n                      ref=\"username\"\r\n                      placeholder=\"Email\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"form-group\">\r\n                    <label>Password:</label>\r\n                    <input\r\n                      className=\"input-sm\"\r\n                      type=\"password\"\r\n                      ref=\"password\"\r\n                      placeholder=\"Password\"\r\n                    />\r\n\r\n                  </div>\r\n                    <div  id=\"buttonContainer\" className=\"container\">\r\n                        <button type=\"submit\" ref=\"regButton\" className=\"btn primary-button\">Login</button>\r\n                        <SignUpButton/>\r\n                        <a href=\"/\" className=\"btn cancel-button bump-left\">Cancel</a>\r\n                    </div>\r\n                </form>\r\n              </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\n\r\nexport default class SignUpButton extends Component{\r\n  handleClick(event){\r\n    event.preventDefault();\r\n    FlowRouter.go('/signUp');\r\n  }\r\n  render(){\r\n    return(\r\n      <button id=\"signUp\" className=\"btn secondary-button bump-left\" onClick={this.handleClick.bind(this)}>Sign Up Here</button>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, {Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\n\r\nexport default class SignUpForm extends Component{\r\n\r\n  handleSubmit(event){\r\n    event.preventDefault();\r\n    let email = ReactDOM.findDOMNode(this.refs.username).value.trim();\r\n    let pwd = ReactDOM.findDOMNode(this.refs.password).value.trim();\r\n    let userObject = {\r\n      email: email,\r\n      password: pwd\r\n    };\r\n\r\n    Accounts.createUser(userObject,function(err){\r\n      if(err){\r\n        console.log(err.reason);\r\n      }\r\n      else{\r\n        FlowRouter.go('/app');\r\n      }\r\n    });\r\n\r\n\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"text-center\">\r\n        <form className=\"signUpForm\" onSubmit={this.handleSubmit.bind(this)}>\r\n          <input\r\n            type=\"email\"\r\n            ref=\"username\"\r\n            className=\"input-sm\"\r\n            placeholder=\"Email\"\r\n          /><br/>\r\n          <input\r\n            type=\"password\"\r\n            ref=\"password\"\r\n            className=\"input-sm\"\r\n            placeholder=\"Password\"\r\n          /><br/>\r\n          <button\r\n            type=\"submit\"\r\n            ref=\"regButton\"\r\n            className=\"btn primary-button\"\r\n          >\r\n              Register\r\n          </button>\r\n          <a\r\n            href=\"/\"\r\n            className=\"btn cancel-button\"\r\n          >\r\n          Cancel\r\n          </a>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component, PropTypes } from 'react';\r\nimport { Tasks } from '../api/tasks.js';\r\n// Task component - represents a single todo item\r\nexport default class Task extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {editable:false, text:props.task.text};\r\n    }\r\n\r\n    taskItem() {\r\n      const taskClassName = this.props.task.checked ? \"checked\": \"\";\r\n      return ( <li className={taskClassName}>\r\n                <div className=\"wrapper\">\r\n                  <button className=\"edit\" onClick={ this.toggleEdit.bind( this ) }>&#9998;</button>\r\n                  <button className=\"delete\" onClick={ this.deleteTask.bind( this) }>&times;</button>\r\n                </div>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  readOnly\r\n                  checked={this.props.task.checked}\r\n                  onClick={this.toggleChecked.bind(this)} />\r\n\r\n                <span className=\"text\">{Meteor.users.findOne(Meteor.userId()).emails[0].address}</span> : {this.props.task.text}\r\n              </li>);\r\n    }\r\n\r\n    makeTaskeditable(){\r\n      const taskClassName = this.props.task.checked ? \"checked\": \"\";\r\n      return (<li className={taskClassName}>\r\n\r\n          <input onChange={this.handleChange.bind(this)} type=\"text\" className=\"text\" value={this.state.text}/>\r\n          <button role=\"submit\" className=\"save\" onClick={ this.editTask.bind(this) }>Submit</button>\r\n\r\n          <button role=\"button\" className=\"cancel\" onClick={ this.toggleEdit.bind(this) }>Cancel</button>\r\n        </li>);\r\n    }\r\n\r\n    handleChange(event){\r\n      this.setState({text:event.target.value});\r\n    }\r\n\r\n\r\n   toggleChecked() {\r\n      Meteor.call('tasks.setChecked', this.props.task._id,!this.props.task.checked)\r\n\r\n  }\r\n\r\n  deleteTask(){\r\n    Meteor.call('tasks.remove',this.props.task._id);\r\n\r\n  }\r\n\r\n  toggleEdit(event){\r\n    event.preventDefault();\r\n    this.setState({editable:!this.state.editable});\r\n  }\r\n\r\n  editTask(event){\r\n    event.preventDefault();\r\n    let text = $(\".text\").val().trim();\r\n    Meteor.call('tasks.edit',this.props.task._id, text,function( err, res ){\r\n      if(err){\r\n        console.log(err.reason);\r\n      }\r\n    });\r\n\r\n    this.toggleEdit(event);\r\n  }\r\n\r\n  render() {\r\n    let component;\r\n    if(this.state.editable){\r\n      component = this.makeTaskeditable();\r\n    }\r\n    else{\r\n      component = this.taskItem();\r\n    }\r\n    return component;\r\n\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  // This component gets the task to display through a React prop.\r\n  // We can use propTypes to indicate it is required\r\n  task: PropTypes.object.isRequired,\r\n};\r\n","import React from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\nimport { FlowRouter } from 'meteor/kadira:flow-router';\r\nimport { mount } from 'react-mounter';\r\nimport ReactDOM from 'react-dom';\r\nimport AppLayout from '../imports/ui/AppLayout.jsx';\r\nimport MainLayout from '../imports/ui/MainLayout.jsx';\r\nimport App from '../imports/ui/App.jsx';\r\nimport SignUpForm from '../imports/ui/SignUpForm.jsx';\r\nimport SignInForm from '../imports/ui/SignInForm.jsx';\r\n\r\n/**\r\n * The routes for corresponding react layouts.\r\n */\r\n    FlowRouter.route('/', {\r\n        name: 'home',\r\n        action(){\r\n            mount(AppLayout, {content: <MainLayout/>});\r\n        }\r\n    });\r\n\r\n    FlowRouter.route('/signIn', {\r\n        name: 'signIn',\r\n        action(){\r\n            mount(AppLayout,{content:<SignInForm/>} );\r\n        }\r\n    });\r\n\r\n    FlowRouter.route('/signUp', {\r\n        name: 'signUp',\r\n        action(){\r\n            mount(AppLayout,{content: <SignUpForm/>})\r\n        }\r\n    });\r\n\r\n    FlowRouter.route('/app', {\r\n        name: 'app',\r\n        action(){\r\n            mount(AppLayout,{content:<App/>} );\r\n        }\r\n    });\r\n\r\n\r\n/**\r\n * Once the user is logged in redirect them to the '/app' route\r\n * @see: FlowFlowRouter.route('/app')\r\n */\r\nAccounts.onLogin(function(){\r\n    FlowRouter.go('/app');\r\n});\r\n","import React from 'react';\r\nimport { Meteor } from 'meteor/meteor';\r\n\r\n\r\nimport '../imports/startup/accounts-config.js';\r\n\r\nMeteor.startup(() => {\r\n    \r\n});\r\n"]}