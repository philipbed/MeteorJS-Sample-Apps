{"version":3,"sources":["meteor://ğŸ’»app/imports/api/auth.js","meteor://ğŸ’»app/imports/api/tasks.js","meteor://ğŸ’»app/imports/startup/validate.js","meteor://ğŸ’»app/server/main.js"],"names":["Meteor","Accounts","check","FlowRouter","methods","email","pwd","console","log","createUser","password","Mongo","Tasks","Collection","isServer","publish","publishTasks","find","text","String","userId","Error","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","newText","validateLoginAttempt","validate","option","allowed","startup"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;AAEAH,OAAOI,OAAP,CAAe;AACb,UADa;AAAA,oBACJC,KADI,EACEC,GADF,EACM;AACfC,cAAQC,GAAR,CAAY,YAAZ;AACAP,eAASQ,UAAT,CAAoB;AAClBJ,eAAMA,KADY;AAElBK,kBAASJ;AAFS,OAApB;AAKH;;AARY;AAAA;AAAA,CAAf,4F;;;;;;;;;;;ACLA,SAASN,MAAT,QAAuB,eAAvB;AACA,SAASW,KAAT,QAAsB,cAAtB;AACA,SAAST,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAMU,QAAQ,IAAID,MAAME,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAGb,OAAOc,QAAV,EAAmB;AACjBd,SAAOe,OAAP,CAAe,OAAf;AAAwB,aAASC,YAAT,GAAuB;AAC7C,aAAOJ,MAAMK,IAAN,EAAP;AACD;;AAFD,WAAiCD,YAAjC;AAAA;AAGD;;AAGD;AACAhB,OAAOI,OAAP,CAAe;AACb,gBADa;AAAA,yBACEc,IADF,EACO;AAClBhB,YAAMgB,IAAN,EAAYC,MAAZ;;AAEA,UAAG,CAAE,KAAKC,MAAV,EAAiB;AACf,cAAM,IAAIpB,OAAOqB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDT,YAAMU,MAAN,CAAa;AACXJ,kBADW;AAEXK,mBAAW,IAAIC,IAAJ,EAFA;AAGXC,eAAO,KAAKL,MAHD;AAIXM,kBAAU1B,OAAO2B,KAAP,CAAaC,OAAb,CAAqB,KAAKR,MAA1B,EAAkCM;AAJjC,OAAb;AAMD;;AAdY;AAAA;AAgBb,gBAhBa;AAAA,yBAgBGG,MAhBH,EAgBW;AACtB3B,YAAM2B,MAAN,EAAaV,MAAb;AACAP,YAAMkB,MAAN,CAAaD,MAAb;AAED;;AApBY;AAAA;AAsBb,oBAtBa;AAAA,6BAsBQA,MAtBR,EAsBgBE,UAtBhB,EAsB4B;AACvC7B,YAAM2B,MAAN,EAAcV,MAAd;AACAjB,YAAM6B,UAAN,EAAiBC,OAAjB;;AAEApB,YAAMqB,MAAN,CAAaJ,MAAb,EAAqB,EAAEK,MAAO,EAACC,SAASJ,UAAV,EAAT,EAArB;AACD;;AA3BY;AAAA;AA6Bb,cA7Ba;AAAA,uBA6BAF,MA7BA,EA6BOO,OA7BP,EA6Be;AAC1BlC,YAAM2B,MAAN,EAAaV,MAAb;;AAEAP,YAAMqB,MAAN,CAAcJ,MAAd,EAAsB,EAACK,MAAM,EAAEhB,MAAMkB,OAAR,EAAP,EAAtB;AACD;;AAjCY;AAAA;AAAA,CAAf,6F;;;;;;;;;;;ACdA,SAASnC,QAAT,QAAyB,sBAAzB;;AAEAA,SAASoC,oBAAT;AAA8B,WAASC,QAAT,CAAkBC,MAAlB,EAAyB;AACrDhC,YAAQC,GAAR,CAAY,kBAAgB+B,OAAOC,OAAnC;AACA,WAAOD,OAAOC,OAAd;AACD;;AAHD,SAAuCF,QAAvC;AAAA,6F;;;;;;;;;;;ACFA,SAAStC,MAAT,QAAuB,eAAvB;AACA,OAAO,yBAAP;AACA,OAAO,wBAAP;AACA,OAAO,gCAAP;;AAEAA,OAAOyC,OAAP,CAAe,YAAM;AACnB;AACD,CAFD,4F","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\nimport { check } from 'meteor/check';\r\nimport {FlowRouter} from 'meteor/kadira:flow-router';\r\n\r\nMeteor.methods({\r\n  'signUp'(email,pwd){\r\n      console.log(\"signing up\");\r\n      Accounts.createUser({\r\n        email:email,\r\n        password:pwd,\r\n      });\r\n\r\n  },\r\n\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif(Meteor.isServer){\r\n  Meteor.publish('tasks', function publishTasks(){\r\n    return Tasks.find();\r\n  });\r\n}\r\n\r\n\r\n// Start meteor methods - like controllers\r\nMeteor.methods({\r\n  'tasks.insert'(text){\r\n    check(text, String);\r\n\r\n    if(! this.userId){\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n\r\n  'tasks.remove' (taskId) {\r\n    check(taskId,String);\r\n    Tasks.remove(taskId);\r\n\r\n  },\r\n\r\n  'tasks.setChecked' ( taskId, setChecked ){\r\n    check(taskId, String);\r\n    check(setChecked,Boolean);\r\n\r\n    Tasks.update(taskId, { $set : {checked: setChecked } } );\r\n  },\r\n\r\n  'tasks.edit'(taskId,newText){\r\n    check(taskId,String);\r\n\r\n    Tasks.update( taskId, {$set: { text: newText } } );\r\n  },\r\n\r\n});\r\n","import { Accounts } from 'meteor/accounts-base';\r\n\r\nAccounts.validateLoginAttempt(function validate(option){\r\n  console.log(\"Validating...\"+option.allowed);\r\n  return option.allowed;\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport '../imports/api/tasks.js';\r\nimport '../imports/api/auth.js';\r\nimport '../imports/startup/validate.js';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n"]}