[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"auth.js\":[\"meteor/meteor\",\"meteor/accounts-base\",\"meteor/check\",\"meteor/kadira:flow-router\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/api/auth.js                                                                   //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var FlowRouter;module.import('meteor/kadira:flow-router',{\"FlowRouter\":function(v){FlowRouter=v}});\n                                                                                         // 2\n                                                                                         // 3\n                                                                                         // 4\n                                                                                         //\nMeteor.methods({                                                                         // 6\n  'signUp': function () {                                                                // 7\n    function signUp(email, pwd) {                                                        // 6\n      console.log(\"signing up\");                                                         // 8\n      Accounts.createUser({                                                              // 9\n        email: email,                                                                    // 10\n        password: pwd                                                                    // 11\n      });                                                                                // 9\n    }                                                                                    // 14\n                                                                                         //\n    return signUp;                                                                       // 6\n  }()                                                                                    // 6\n});                                                                                      // 6\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"tasks.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/api/tasks.js                                                                  //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.export({Tasks:function(){return Tasks}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                                         // 2\n                                                                                         // 3\n                                                                                         //\nvar Tasks = new Mongo.Collection('tasks');                                               // 5\n                                                                                         //\nif (Meteor.isServer) {                                                                   // 7\n  Meteor.publish('tasks', function () {                                                  // 8\n    function publishTasks() {                                                            // 8\n      return Tasks.find();                                                               // 9\n    }                                                                                    // 10\n                                                                                         //\n    return publishTasks;                                                                 // 8\n  }());                                                                                  // 8\n}                                                                                        // 11\n                                                                                         //\n// Start meteor methods - like controllers                                               // 14\nMeteor.methods({                                                                         // 15\n  'tasks.insert': function () {                                                          // 16\n    function tasksInsert(text) {                                                         // 15\n      check(text, String);                                                               // 17\n                                                                                         //\n      if (!this.userId) {                                                                // 19\n        throw new Meteor.Error(\"not-authorized\");                                        // 20\n      }                                                                                  // 21\n                                                                                         //\n      Tasks.insert({                                                                     // 23\n        text: text,                                                                      // 24\n        createdAt: new Date(),                                                           // 25\n        owner: this.userId,                                                              // 26\n        username: Meteor.users.findOne(this.userId).username                             // 27\n      });                                                                                // 23\n    }                                                                                    // 29\n                                                                                         //\n    return tasksInsert;                                                                  // 15\n  }(),                                                                                   // 15\n  'tasks.remove': function () {                                                          // 31\n    function tasksRemove(taskId) {                                                       // 15\n      check(taskId, String);                                                             // 32\n      Tasks.remove(taskId);                                                              // 33\n    }                                                                                    // 35\n                                                                                         //\n    return tasksRemove;                                                                  // 15\n  }(),                                                                                   // 15\n  'tasks.setChecked': function () {                                                      // 37\n    function tasksSetChecked(taskId, setChecked) {                                       // 15\n      check(taskId, String);                                                             // 38\n      check(setChecked, Boolean);                                                        // 39\n                                                                                         //\n      Tasks.update(taskId, { $set: { checked: setChecked } });                           // 41\n    }                                                                                    // 42\n                                                                                         //\n    return tasksSetChecked;                                                              // 15\n  }(),                                                                                   // 15\n  'tasks.edit': function () {                                                            // 44\n    function tasksEdit(taskId, newText) {                                                // 15\n      check(taskId, String);                                                             // 45\n                                                                                         //\n      Tasks.update(taskId, { $set: { text: newText } });                                 // 47\n    }                                                                                    // 48\n                                                                                         //\n    return tasksEdit;                                                                    // 15\n  }()                                                                                    // 15\n});                                                                                      // 15\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"validate.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/startup/validate.js                                                           //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});\n                                                                                         //\nAccounts.validateLoginAttempt(function () {                                              // 3\n  function validate(option) {                                                            // 3\n    console.log(\"Validating...\" + option.allowed);                                       // 4\n    return option.allowed;                                                               // 5\n  }                                                                                      // 6\n                                                                                         //\n  return validate;                                                                       // 3\n}());                                                                                    // 3\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"main.js\":[\"meteor/meteor\",\"../imports/api/tasks.js\",\"../imports/api/auth.js\",\"../imports/startup/validate.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// server/main.js                                                                        //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});module.import('../imports/api/tasks.js');module.import('../imports/api/auth.js');module.import('../imports/startup/validate.js');\n                                                                                         // 2\n                                                                                         // 3\n                                                                                         // 4\n                                                                                         //\nMeteor.startup(function () {                                                             // 6\n  // code to run on server at startup                                                    // 7\n});                                                                                      // 8\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/auth.js","/imports/api/tasks.js","/imports/startup/validate.js","/server/main.js"],"names":["Meteor","Accounts","check","FlowRouter","methods","email","pwd","console","log","createUser","password","Mongo","Tasks","Collection","isServer","publish","publishTasks","find","text","String","userId","Error","insert","createdAt","Date","owner","username","users","findOne","taskId","remove","setChecked","Boolean","update","$set","checked","newText","validateLoginAttempt","validate","option","allowed","startup"],"mappings":";;;;;;;;AAAA,SAASA,MAAT,QAAuB,eAAvB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAAQC,UAAR,QAAyB,2BAAzB;;AAEAH,OAAOI,OAAP,CAAe;AACb,UADa;AAAA,oBACJC,KADI,EACEC,GADF,EACM;AACfC,cAAQC,GAAR,CAAY,YAAZ;AACAP,eAASQ,UAAT,CAAoB;AAClBJ,eAAMA,KADY;AAElBK,kBAASJ;AAFS,OAApB;AAKH;;AARY;AAAA;AAAA,CAAf,4F;;;;;;;;;;;ACLA,SAASN,MAAT,QAAuB,eAAvB;AACA,SAASW,KAAT,QAAsB,cAAtB;AACA,SAAST,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAMU,QAAQ,IAAID,MAAME,UAAV,CAAqB,OAArB,CAAd;;AAEP,IAAGb,OAAOc,QAAV,EAAmB;AACjBd,SAAOe,OAAP,CAAe,OAAf;AAAwB,aAASC,YAAT,GAAuB;AAC7C,aAAOJ,MAAMK,IAAN,EAAP;AACD;;AAFD,WAAiCD,YAAjC;AAAA;AAGD;;AAGD;AACAhB,OAAOI,OAAP,CAAe;AACb,gBADa;AAAA,yBACEc,IADF,EACO;AAClBhB,YAAMgB,IAAN,EAAYC,MAAZ;;AAEA,UAAG,CAAE,KAAKC,MAAV,EAAiB;AACf,cAAM,IAAIpB,OAAOqB,KAAX,CAAiB,gBAAjB,CAAN;AACD;;AAEDT,YAAMU,MAAN,CAAa;AACXJ,kBADW;AAEXK,mBAAW,IAAIC,IAAJ,EAFA;AAGXC,eAAO,KAAKL,MAHD;AAIXM,kBAAU1B,OAAO2B,KAAP,CAAaC,OAAb,CAAqB,KAAKR,MAA1B,EAAkCM;AAJjC,OAAb;AAMD;;AAdY;AAAA;AAgBb,gBAhBa;AAAA,yBAgBGG,MAhBH,EAgBW;AACtB3B,YAAM2B,MAAN,EAAaV,MAAb;AACAP,YAAMkB,MAAN,CAAaD,MAAb;AAED;;AApBY;AAAA;AAsBb,oBAtBa;AAAA,6BAsBQA,MAtBR,EAsBgBE,UAtBhB,EAsB4B;AACvC7B,YAAM2B,MAAN,EAAcV,MAAd;AACAjB,YAAM6B,UAAN,EAAiBC,OAAjB;;AAEApB,YAAMqB,MAAN,CAAaJ,MAAb,EAAqB,EAAEK,MAAO,EAACC,SAASJ,UAAV,EAAT,EAArB;AACD;;AA3BY;AAAA;AA6Bb,cA7Ba;AAAA,uBA6BAF,MA7BA,EA6BOO,OA7BP,EA6Be;AAC1BlC,YAAM2B,MAAN,EAAaV,MAAb;;AAEAP,YAAMqB,MAAN,CAAcJ,MAAd,EAAsB,EAACK,MAAM,EAAEhB,MAAMkB,OAAR,EAAP,EAAtB;AACD;;AAjCY;AAAA;AAAA,CAAf,6F;;;;;;;;;;;ACdA,SAASnC,QAAT,QAAyB,sBAAzB;;AAEAA,SAASoC,oBAAT;AAA8B,WAASC,QAAT,CAAkBC,MAAlB,EAAyB;AACrDhC,YAAQC,GAAR,CAAY,kBAAgB+B,OAAOC,OAAnC;AACA,WAAOD,OAAOC,OAAd;AACD;;AAHD,SAAuCF,QAAvC;AAAA,6F;;;;;;;;;;;ACFA,SAAStC,MAAT,QAAuB,eAAvB;AACA,OAAO,yBAAP;AACA,OAAO,wBAAP;AACA,OAAO,gCAAP;;AAEAA,OAAOyC,OAAP,CAAe,YAAM;AACnB;AACD,CAFD,4F","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\r\nimport { Accounts } from 'meteor/accounts-base';\r\nimport { check } from 'meteor/check';\r\nimport {FlowRouter} from 'meteor/kadira:flow-router';\r\n\r\nMeteor.methods({\r\n  'signUp'(email,pwd){\r\n      console.log(\"signing up\");\r\n      Accounts.createUser({\r\n        email:email,\r\n        password:pwd,\r\n      });\r\n\r\n  },\r\n\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport { Mongo } from 'meteor/mongo';\r\nimport { check } from 'meteor/check';\r\n\r\nexport const Tasks = new Mongo.Collection('tasks');\r\n\r\nif(Meteor.isServer){\r\n  Meteor.publish('tasks', function publishTasks(){\r\n    return Tasks.find();\r\n  });\r\n}\r\n\r\n\r\n// Start meteor methods - like controllers\r\nMeteor.methods({\r\n  'tasks.insert'(text){\r\n    check(text, String);\r\n\r\n    if(! this.userId){\r\n      throw new Meteor.Error(\"not-authorized\");\r\n    }\r\n\r\n    Tasks.insert({\r\n      text,\r\n      createdAt: new Date(),\r\n      owner: this.userId,\r\n      username: Meteor.users.findOne(this.userId).username,\r\n    });\r\n  },\r\n\r\n  'tasks.remove' (taskId) {\r\n    check(taskId,String);\r\n    Tasks.remove(taskId);\r\n\r\n  },\r\n\r\n  'tasks.setChecked' ( taskId, setChecked ){\r\n    check(taskId, String);\r\n    check(setChecked,Boolean);\r\n\r\n    Tasks.update(taskId, { $set : {checked: setChecked } } );\r\n  },\r\n\r\n  'tasks.edit'(taskId,newText){\r\n    check(taskId,String);\r\n\r\n    Tasks.update( taskId, {$set: { text: newText } } );\r\n  },\r\n\r\n});\r\n","import { Accounts } from 'meteor/accounts-base';\r\n\r\nAccounts.validateLoginAttempt(function validate(option){\r\n  console.log(\"Validating...\"+option.allowed);\r\n  return option.allowed;\r\n});\r\n","import { Meteor } from 'meteor/meteor';\r\nimport '../imports/api/tasks.js';\r\nimport '../imports/api/auth.js';\r\nimport '../imports/startup/validate.js';\r\n\r\nMeteor.startup(() => {\r\n  // code to run on server at startup\r\n});\r\n"]}}]